#!/bin/bash
set -e

# dircmp - compare current and another directory, listing unique and modified files
# ed <irc.rizon.net>, MIT-licensed, https://github.com/9001/usr-local-bin
# -- run without arguments to re-display the most recent comparison
# -- TODO: does not work on osx due to use of /dev/shm
# -- TODO: not safe to run multiple instances in parallel due to fixed-path temp files

d1="$(realpath -- "$(pwd)")"
d2="$(realpath -- "$1" || cat /dev/shm/dircmp.2n)"

scan() {
	[ -z "$1" ] &&
	{
		echo "need argument 1: other directory"
		exit 1
	}
	
	printf 'dir: %s\n' "$d1" "$d2"
	[ "$d1" = "$d2" ] && {
		echo "directories must be different"
		exit 1
	}

	ndevs=$(stat -c'%D@%m' -- . "$1" | uniq | wc -l)
	[ $ndevs -eq 2 ] &&
		echo "folders are on different devices; hashing in parallel" ||
		echo "folders are on the same device; hashing one at a time"

	n=0
	for x in . "$1"
	do
		n=$((n+1))
		(
			cd -- "$x"
			
			find -type f -exec md5sum '{}' \+ |
			{
				which pv >/dev/null 2>/dev/null && pv || cat
			} |
			sed -r 's/(\\?.{32})(.*)/\2\1/' |
			sort |
			sed -r 's/(.*[^\])(\\?.{32})/\2\1/' > /dev/shm/dircmp.$n
		) &
		
		[ $ndevs -gt 1 ] ||
			wait
	done
	wait

	printf '%s\n' "$1" > /dev/shm/dircmp.2n

	sed -r 's/^\\//' /dev/shm/dircmp.{1,2} |
	sort -u > /dev/shm/dircmp.c

	for x in 1 2
	do
		sed -r 's/^\\//' /dev/shm/dircmp.$x |
		cut -c35- > /dev/shm/dircmp.${x}f
	done 
}

show() {
	printf 'dir: %s\n' "$d1" "$d2"
	printf '%s\n' $(head -c 72 /dev/zero | tr '\0' -)
	
	printf '\033[1;31m\n'
	diff -NarU1 /dev/shm/dircmp.*f |
	grep -aE '^-\./' |
	cut -c4- |
	sed -r 's/^/local: /' |
	grep -aE . &&
	printf '\033[1;35m%s\033[0m\n' "\- only in $d1"

	printf '\033[1;33m\n'
	diff -NarU1 /dev/shm/dircmp.*f |
	grep -aE '^\+\./' |
	cut -c4- |
	sed -r 's/^/other: /' |
	grep -aE . &&
	printf '\033[1;33m%s\033[0m\n' "\- only in $d2"

	printf '\033[1;32m\n'
	cat /dev/shm/dircmp.c | 
	cut -c37- |
	sort |
	uniq -d |
	sed -r 's/^/ALTER: /'
	printf '\033[0m\n'

	printf '%s\n' $(head -c 72 /dev/zero | tr '\0' -)
	printf 'dir: %s\n' "$d1" "$d2"
	printf '\nmerged output: cdiff /dev/shm/dircmp.{1,2}\n'
}

[ -z "$1" ] ||
	scan "$@"

printf '\033[1;35m'
cmp /dev/shm/dircmp.{1,2} && {
	printf "\033[0;1;37;44m\033[Jfolders are identical\n\033[0m"
	exit 0
}
printf '\033[0m'
show | less -R
